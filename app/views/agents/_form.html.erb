<%= form_with(model: agent) do |form| %>
  <%= form_errors(agent) %>

  <div>
    <%= form.label :name %><br>
    <%= form.text_field :name %>
  </div>

  <div>
    <%= form.label :docker_image %><br>
    <%= form.text_field :docker_image %>
  </div>

  <div>
    <%= form.label :mcp_sse_endpoint, "MCP SSE Endpoint" %><br>
    <%= form.text_field :mcp_sse_endpoint, placeholder: "http://localhost:3000" %>
    <small class="form-help">Base URL for MCP server (will append /mcp/sse automatically). Leave blank to disable MCP.</small>
  </div>

  <%= render "shared/arguments_fields", 
             form: form, 
             parent: agent, 
             association_name: :start_arguments_records,
             title: "Start Arguments",
             singular_name: "Start Argument",
             help_text: "Arguments passed when starting a new task" %>

  <%= render "shared/arguments_fields", 
             form: form, 
             parent: agent, 
             association_name: :continue_arguments_records,
             title: "Continue Arguments",
             singular_name: "Continue Argument",
             help_text: "Arguments passed when continuing an existing task" %>

  <div>
    <%= form.label :workplace_path %><br>
    <%= form.text_field :workplace_path %>
  </div>

  <div>
    <%= form.label :volumes_config, "Volumes (JSON format)" %><br>
    <%= form.text_area :volumes_config, readonly: !agent.new_record? %>
    <% unless agent.new_record? %>
      <small class="form-help">Volumes cannot be edited after creation</small>
    <% else %>
      <small class="form-help">
        Format: <code>{"volume_name": "/path"}</code> for managed volumes<br>
        or <code>{"volume_name": {"path": "/path", "external": true, "external_name": "docker_volume_name"}}</code> for external Docker volumes
      </small>
    <% end %>
  </div>

  <%= render "shared/env_variables_fields", 
             form: form, 
             parent: agent, 
             title: "Environment Variables",
             singular_name: "Environment Variable" %>

  <%= render "shared/secrets_fields", 
             form: form, 
             parent: agent, 
             title: "Secrets",
             singular_name: "Secret",
             help_text: "Values are encrypted and hidden after saving. Existing secrets show as \"[ENCRYPTED]\"." %>

  <div>
    <%= form.label :log_processor %><br>
    <%= form.select :log_processor, 
        options_for_select(
          LogProcessor::ALL.map { |klass| [klass.name.demodulize.humanize, klass.name.demodulize] }, 
          agent.log_processor
        ), 
        {}, 
        { class: "form-select" } %>
  </div>

  <div>
    <%= form.label :user_id, "User ID (UID for file ownership)" %><br>
    <%= form.number_field :user_id, value: agent.user_id %>
    <small class="form-help">Set to match the UID that your agent runs as. Current value: <%= agent.user_id %></small>
  </div>

  <div>
    <%= form.label :instructions_mount_path, "User Instructions Mount Path" %><br>
    <%= form.text_field :instructions_mount_path, placeholder: "/workspace/.instructions" %>
    <small class="form-help">Path where user instructions will be mounted (read-only). Leave blank to disable mounting.</small>
  </div>

  <div>
    <%= form.label :ssh_mount_path, "SSH Key Mount Path" %><br>
    <%= form.text_field :ssh_mount_path, placeholder: "/home/user/.ssh/id_rsa" %>
    <small class="form-help">Path where user's SSH private key will be mounted (read-only). Leave blank to disable SSH key mounting.</small>
  </div>

  <div>
    <%= form.label :home_path, "Home Directory Path" %><br>
    <%= form.text_field :home_path, placeholder: "/home" %>
    <small class="form-help">Path to user's home directory inside the container where .gitconfig will be mounted. Common values: /home, /root</small>
  </div>

  <div>
    <h3>Agent-Specific Settings</h3>
    <% current_setting = agent.agent_specific_settings.first %>
    
    <div>
      <%= form.label :agent_specific_setting_type, "Agent Type:" %><br>
      <%= form.select :agent_specific_setting_type,
          agent_type_options(current_setting),
          {},
          { class: "form-select" } %>
    </div>
    
    <% if current_setting %>
      <%= form.fields_for :agent_specific_settings, current_setting do |setting_form| %>
        <% if current_setting.persisted? %>
          <%= setting_form.hidden_field :id %>
        <% end %>
        <%= setting_form.hidden_field :type %>
        <%= setting_form.hidden_field :_destroy, value: false %>
      <% end %>
    <% end %>
  </div>

  <div>
    <%= form.submit %>
  </div>
<% end %>
